generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Prompt {
  id         String       @id @default(cuid())
  imageKey    String
  room       Room
  theme      Theme
  userId     String
  user       User         @relation(fields: [userId], references: [id])
  Prediction Prediction[]
}


model Prediction {
  id      String @id @default(cuid())
  imageKey String
   predictedImageUrl String
  prompt  Prompt @relation(fields: [promptId], references: [id])
  user    User   @relation(fields: [userId], references: [id])
  userId       String
  promptId     String
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Prompt        Prompt[]
  Prediction    Prediction[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Theme {
  Modern
  Traditional
  Contemporary
  Farmhouse
  Rustic
  MidCentury
  Mediterranean
  Industrial
  Scandinavian
}

enum Room {
  living_room
  dining_room
  bedroom
  bathroom
  office
  gaming_room
}
